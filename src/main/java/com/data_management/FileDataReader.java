package com.data_management;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;

/**
 * The {@code FileDataReader} implements {@link DataReader} patient data from text files and loads
 * them into the DataStorage system. Files are expected to follow the format generated by
 * FileOutputStrategy.
 */
public class FileDataReader implements DataReader {

  private final String baseDirectory;

  /**
   * Constructs a FileDataReader for a given base directory.
   *
   * @param baseDirectory the path to the directory containing the patient data files.
   */
  public FileDataReader(String baseDirectory) {
    this.baseDirectory = baseDirectory;
  }

  /**
   * Reads all files in the base directory and loads their data into the provided DataStorage
   * object.
   *
   * @param storage the DataStorage object to populate with data.
   */
  public void readData(DataStorage storage) {
    File directory = new File(baseDirectory);
    if (!directory.exists() || !directory.isDirectory()) {
      System.err.println("Invalid base directory: " + baseDirectory);
      return;
    }

    File[] files = directory.listFiles((dir, name) -> name.endsWith(".txt"));
    if (files == null) {
      System.err.println("No files found in directory: " + baseDirectory);
      return;
    }

    for (File file : files) {
      readFile(file, storage);
    }
  }

  /**
   * Reads data from a single file and adds it to the storage.
   *
   * @param file the file to read from.
   * @param storage the DataStorage object to populate.
   */
  private void readFile(File file, DataStorage storage) {
    try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
      String line;
      while ((line = reader.readLine()) != null) {
        try {
          // Expected format: Patient ID: 1, Timestamp: long, Label: String, Data: double
          String[] parts = line.split(", ");
          int patientId = Integer.parseInt(parts[0].split(": ")[1]);
          long timestamp = Long.parseLong(parts[1].split(": ")[1]);
          String label = parts[2].split(": ")[1];
          double data = Double.parseDouble(parts[3].split(": ")[1]);

          storage.addPatientData(patientId, data, label, timestamp);
        } catch (Exception e) {
          System.err.println("Failed to parse line: " + line);
        }
      }
    } catch (IOException e) {
      System.err.println("Error reading file: " + file.getName() + " - " + e.getMessage());
    }
  }
}
